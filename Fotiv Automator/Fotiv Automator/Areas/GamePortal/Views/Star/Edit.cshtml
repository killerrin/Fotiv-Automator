@using Fotiv_Automator.Areas.GamePortal
@model Fotiv_Automator.Areas.GamePortal.ViewModels.Forms.StarForm
@{
    ViewBag.Title = string.Format("Edit Star");
}

<div class="row">
    @using (Html.BeginForm())
    {

        <div class="hidden" id="anti-forgery-container">
            @Html.AntiForgeryToken()
        </div>

        <div class="col-md-6">
            @Html.ValidationSummary()

            <div>
                @Html.LabelFor(x => x.ID)
                @Html.DisplayTextFor(x => x.ID)
                @Html.HiddenFor(x => x.ID)
            </div>

            <div>
                @Html.LabelFor(x => x.StarsystemID)
                @Html.DisplayTextFor(x => x.StarsystemID)
                @Html.HiddenFor(x => x.StarsystemID)
            </div>

            <div>
                @Html.LabelFor(x => x.Name)
                @Html.EditorFor(x => x.Name)
            </div>

            <div>
                @Html.LabelFor(x => x.GMNotes)
                @Html.TextAreaFor(x => x.GMNotes)
            </div>
        </div>

        <div class="col-md-6">
            <div class="panel panel-info">
                <div class="panel-heading">Star Age</div>
                <div class="panel-body">
                    <ul class="owner-select">
                        @for (var i = 0; i < Model.StarAges.Count; i++)
                        {
                            var starAge = Model.StarAges[i];
                            <li>
                                @Html.HiddenFor(x => x.StarAges[i].ID)

                                @Html.DisplayFor(x => x.StarAges[i].Name)
                                @Html.HiddenFor(x => x.StarAges[i].Name)

                                @if (Model.StarAges[i].IsChecked)
                                {
                                    @Html.RadioButtonFor(x => x.SelectedStarAge, Model.StarAges[i].ID, new { id = "starAge" + starAge.ID, @checked = "checked" })
                                }
                                else
                                {
                                    @Html.RadioButtonFor(x => x.SelectedStarAge, Model.StarAges[i].ID, new { id = "starAge" + starAge.ID })
                                }
                            </li>
                        }
                    </ul>
                </div>
            </div>

            <div class="panel panel-info">
                <div class="panel-heading">Star Type</div>
                <div class="panel-body">
                    <ul class="owner-select">
                        @for (var i = 0; i < Model.StarTypes.Count; i++)
                        {
                            var starType = Model.StarTypes[i];
                            <li>
                                @Html.HiddenFor(x => x.StarTypes[i].ID)

                                @Html.DisplayFor(x => x.StarTypes[i].Name)
                                @Html.HiddenFor(x => x.StarTypes[i].Name)

                                @if (Model.StarTypes[i].IsChecked)
                                {
                                    @Html.RadioButtonFor(x => x.SelectedStarType, Model.StarTypes[i].ID, new { id = "starType" + starType.ID, @checked = "checked" })
                                }
                                else
                                {
                                    @Html.RadioButtonFor(x => x.SelectedStarType, Model.StarTypes[i].ID, new { id = "starType" + starType.ID })
                                }
                            </li>
                        }
                    </ul>
                </div>
            </div>

            <div class="panel panel-info">
                <div class="panel-heading">Radiation Level</div>
                <div class="panel-body">
                    <ul class="owner-select">
                        @for (var i = 0; i < Model.RadiationLevels.Count; i++)
                        {
                            var radiationLevel = Model.RadiationLevels[i];
                            <li>
                                @Html.HiddenFor(x => x.RadiationLevels[i].ID)

                                @Html.DisplayFor(x => x.RadiationLevels[i].Name)
                                @Html.HiddenFor(x => x.RadiationLevels[i].Name)

                                @if (Model.RadiationLevels[i].IsChecked)
                                {
                                    @Html.RadioButtonFor(x => x.SelectedRadiationLevel, Model.RadiationLevels[i].ID, new { id = "radiationLevel" + radiationLevel.ID, @checked = "checked" })
                                }
                                else
                                {
                                    @Html.RadioButtonFor(x => x.SelectedRadiationLevel, Model.RadiationLevels[i].ID, new { id = "radiationLevel" + radiationLevel.ID })
                                }
                            </li>
                        }
                    </ul>
                </div>
            </div>

            <input class="btn btn-default editButton" type="submit" value="Edit Star" />

            <a href="@Url.Action("Delete", "Star", new { gameID = GameState.Game.ID, starID = Model.ID })"
               class="btn btn-danger"
               data-delete="THIS ACTION IS FINAL. Are you sure you want to delete this?">
                <i class="glyphicon glyphicon-remove"></i> Delete
            </a>
        </div>
    }
</div>