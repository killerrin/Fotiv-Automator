@model Fotiv_Automator.Areas.GamePortal.ViewModels.Forms.ShipForm
@{
    ViewBag.Title = string.Format("New Ship");
}

<div class="row">
    @using (Html.BeginForm())
    {
        <div class="col-md-6">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary()

            <div>
                @Html.LabelFor(x => x.Name)
                @Html.EditorFor(x => x.Name)
            </div>

            <div>
                @Html.LabelFor(x => x.Description)
                @Html.TextAreaFor(x => x.Description)
            </div>

            <div>
                @Html.LabelFor(x => x.RPCost)
                @Html.TextBoxFor(x => x.RPCost)
            </div>

            <div>
                @Html.LabelFor(x => x.BaseHealth)
                @Html.TextBoxFor(x => x.BaseHealth)
            </div>

            <div>
                @Html.LabelFor(x => x.BaseRegeneration)
                @Html.TextBoxFor(x => x.BaseRegeneration)
            </div>

            <div>
                @Html.LabelFor(x => x.BaseAttack)
                @Html.TextBoxFor(x => x.BaseAttack)
            </div>
            <div>
                @Html.LabelFor(x => x.BaseSpecialAttack)
                @Html.TextBoxFor(x => x.BaseSpecialAttack)
            </div>

            <div>
                @Html.LabelFor(x => x.BaseAgility)
                @Html.TextBoxFor(x => x.BaseAgility)
            </div>

            <div>
                @Html.LabelFor(x => x.MaximumFighters)
                @Html.TextBoxFor(x => x.MaximumFighters)
            </div>

            <div>
                @Html.LabelFor(x => x.NumBuild)
                @Html.TextBoxFor(x => x.NumBuild)
            </div>

            <div>
                @Html.LabelFor(x => x.GMNotes)
                @Html.TextAreaFor(x => x.GMNotes)
            </div>
        </div>

        <div class="col-md-6">
            <div class="panel panel-info">
                <div class="panel-heading">Ship Rates</div>
                <div class="panel-body ShipRateEditor">
                    <ul class="owner-select">
                        @for (var i = 0; i < Model.ShipRates.Count; i++)
                        {
                            var shipRate = Model.ShipRates[i];
                            <li>
                                @Html.HiddenFor(x => x.ShipRates[i].ID)

                                @Html.DisplayFor(x => x.ShipRates[i].Name)
                                @Html.HiddenFor(x => x.ShipRates[i].Name)

                                @if (Model.ShipRates[i].IsChecked)
                                {
                                    @Html.RadioButtonFor(x => x.SelectedShipRate, Model.ShipRates[i].ID, new { id = "shipRate" + shipRate.ID, @checked = "checked" })
                                }
                                else
                                {
                                    @Html.RadioButtonFor(x => x.SelectedShipRate, Model.ShipRates[i].ID, new { id = "shipRate" + shipRate.ID })
                                }
                            </li>
                        }
                    </ul>
                </div>
            </div>

            <div>
                <input class="btn btn-default newButton" type="submit" value="Create Ship" />
            </div>
        </div>
    }
</div>