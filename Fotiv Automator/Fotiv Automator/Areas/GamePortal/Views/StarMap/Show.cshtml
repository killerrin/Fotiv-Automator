@using Fotiv_Automator.Areas.GamePortal;
@using Fotiv_Automator.Areas.GamePortal.Models.Game;
@model Fotiv_Automator.Areas.GamePortal.ViewModels.ViewStarMap
@{
    ViewBag.Title = "Star Map";
}

<div class="row">
    <h1>
        @Model.Sector.Info.name - Star Map

        @if ((Model.User.GameUserInfo.is_gm) || User.IsInRole("Admin"))
        {
            <a href="@Url.RouteUrl("EditStarMap", new { sectorID = Model.Sector.Info.id })" class="btn btn-default pull-right">
                Edit Star Map
            </a>
        }
    </h1>
    <p>@Model.Sector.Info.description</p>

    @if (Model.User.GameUserInfo.is_gm && !string.IsNullOrWhiteSpace(Model.Sector.Info.gmnotes))
    {
        <h2>GM Notes</h2>
        <p>@Model.Sector.Info.gmnotes</p>
    }

    <div class="row">
        <div class="col-md-12">
            <div class="canvasContainer">
                <canvas id="HexCanvas" width="@(Model.Sector.Width * Model.Sector.HexSize - 150)" height="@((Model.Sector.Height * (Math.Sqrt(3) * Model.Sector.HexRadius)) + (@Model.Sector.HexSize * 1.2))"></canvas>
            </div>
        </div>
        <div class="col-md-12">
            <div id="hexDetails">

            </div>
        </div>
    </div>
</div>

@section GameScripts {
    <script>
        var hexagonGrid = new HexagonGrid("HexCanvas", @Model.Sector.HexRadius);
        hexagonGrid.setCallback(function (hex_X, hex_Y) {
            //alert("From Show " + hex_X + ", " + hex_Y + ": " + "@Url.Action("StarSystemDetails", "StarMap")");
            $("#hexDetails").load("@Url.Action("StarSystemDetails", "StarMap")", { hexX: hex_X, hexY: hex_Y });
        });

        hexagonGrid.drawHexGrid(@Model.Sector.Width, @Model.Sector.Height, 5, 5, true);

        @{
            var game = GameState.Game;

            if (Model.User.IsGM || User.IsInRole("Admin"))
            {
                foreach (var system in Model.Sector.StarSystemsRaw)
                {
                    foreach (var star in system.Stars)
                    {
                        foreach (var planet in star.Planets)
                        {
                            foreach (var infrastructure in planet.Infrastructure)
                            {
                                if (infrastructure.IsBuilt)
                                {
                                    @:hexagonGrid.drawHexAtColRow(@system.HexCode.X, @system.HexCode.Y, "@infrastructure.Owner.Info.colour", true);
                                }
                            }
                        }
                    }
                }
            }
            else
            {
                foreach (var civilization in Model.VisibleCivilizations)
                {
                    foreach (var infrastructure in civilization.Assets.CompletedInfrastructure)
                    {
                        @:hexagonGrid.drawHexAtColRow(@infrastructure.Planet.Star.SolarSystem.HexCode.X, @infrastructure.Planet.Star.SolarSystem.HexCode.Y, "@infrastructure.Owner.Info.colour", true);
                    }
                }
            }
        }
    </script>
}